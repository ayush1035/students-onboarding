{"version":3,"sources":["webpack:///./src/app/core/guards/auth-guard-for-login.service.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login/login.component.css","webpack:///./src/app/login/login/login.component.html","webpack:///./src/app/login/login/login.component.ts","webpack:///./src/app/login/shared/constants.ts","webpack:///./src/app/login/shared/login.service.ts","webpack:///./src/app/login/shared/user.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {SharedService} from '../services/shared.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardForLoginService implements CanActivate{\n\n  constructor(private _router: Router,private sharedService:SharedService) { } // initializing the router\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.sharedService.checkLogin()) {\n      return true; // allow the access of the page\n    }\n    else\n    {\n      this._router.navigate(['/student-onboard']); // redirect to login page\n    }\n  }\n\n  /**\n   * to check whether a user is logged in or not\n   */\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport {AuthGuardForLoginService} from '../core/guards/auth-guard-for-login.service';\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    canActivate:[AuthGuardForLoginService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \".form-signin\\r\\n{\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.form-signin .form-signin-heading, .form-signin .checkbox\\r\\n{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.form-signin .checkbox\\r\\n{\\r\\n    font-weight: normal;\\r\\n}\\r\\n.form-signin .form-control\\r\\n{\\r\\n    position: relative;\\r\\n    font-size: 16px;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n.form-signin .form-control:focus\\r\\n{\\r\\n    z-index: 2;\\r\\n}\\r\\n.form-signin input[type=\\\"text\\\"]\\r\\n{\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-left-radius: 0;\\r\\n    border-bottom-right-radius: 0;\\r\\n}\\r\\n.form-signin input[type=\\\"password\\\"]\\r\\n{\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n}\\r\\n.account-wall\\r\\n{\\r\\n    margin-top: 20px;\\r\\n    padding: 40px 0px 20px 0px;\\r\\n    background-color: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n.login-title\\r\\n{\\r\\n    color: #555;\\r\\n    font-size: 18px;\\r\\n    font-weight: 400;\\r\\n    display: block;\\r\\n}\\r\\n.profile-img\\r\\n{\\r\\n    width: 96px;\\r\\n    height: 96px;\\r\\n    margin: 0 auto 10px;\\r\\n    display: block;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n.need-help\\r\\n{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.new-account\\r\\n{\\r\\n    display: block;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.login-form{\\r\\n    margin: auto;\\r\\n}\\r\\n.error-message{\\r\\n    color: red;\\r\\n    margin-left: 7%;\\r\\n}\\r\\n.login-container{\\r\\n    margin-top: 5%\\r\\n}\\r\\n.image-1 {\\r\\n    position: absolute;\\r\\n    bottom: -12px;\\r\\n    left: -231px;\\r\\n    z-index: 99; }\\r\\n.image-2 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    right: -199px;\\r\\n    z-index: -2;;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7QUFDbEI7QUFDQTs7SUFFSSxtQkFBbUI7QUFDdkI7QUFDQTs7SUFFSSxtQkFBbUI7QUFDdkI7QUFDQTs7SUFFSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLFlBQVk7SUFDWixhQUFhO0lBR2Isc0JBQXNCO0FBQzFCO0FBQ0E7O0lBRUksVUFBVTtBQUNkO0FBQ0E7O0lBRUksbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7QUFDQTs7SUFFSSxtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLDBCQUEwQjtBQUM5QjtBQUNBOztJQUVJLGdCQUFnQjtJQUNoQiwwQkFBMEI7SUFDMUIseUJBQXlCO0lBR3pCLDBDQUEwQztBQUM5QztBQUNBOztJQUVJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7QUFDQTs7SUFFSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixjQUFjO0lBR2Qsa0JBQWtCO0FBQ3RCO0FBQ0E7O0lBRUksZ0JBQWdCO0FBQ3BCO0FBQ0E7O0lBRUksY0FBYztJQUNkLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUVBO0lBQ0ksVUFBVTtJQUNWLGVBQWU7QUFDbkI7QUFFQTtJQUNJO0FBQ0o7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsWUFBWTtJQUNaLFdBQVcsRUFBRTtBQUVmO0lBQ0Usa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxhQUFhO0lBQ2IsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLXNpZ25pblxyXG57XHJcbiAgICBtYXgtd2lkdGg6IDMzMHB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcbi5mb3JtLXNpZ25pbiAuZm9ybS1zaWduaW4taGVhZGluZywgLmZvcm0tc2lnbmluIC5jaGVja2JveFxyXG57XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5mb3JtLXNpZ25pbiAuY2hlY2tib3hcclxue1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxufVxyXG4uZm9ybS1zaWduaW4gLmZvcm0tY29udHJvbFxyXG57XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG4uZm9ybS1zaWduaW4gLmZvcm0tY29udHJvbDpmb2N1c1xyXG57XHJcbiAgICB6LWluZGV4OiAyO1xyXG59XHJcbi5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwidGV4dFwiXVxyXG57XHJcbiAgICBtYXJnaW4tYm90dG9tOiAtMXB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xyXG59XHJcbi5mb3JtLXNpZ25pbiBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl1cclxue1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxufVxyXG4uYWNjb3VudC13YWxsXHJcbntcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBwYWRkaW5nOiA0MHB4IDBweCAyMHB4IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG59XHJcbi5sb2dpbi10aXRsZVxyXG57XHJcbiAgICBjb2xvcjogIzU1NTtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4ucHJvZmlsZS1pbWdcclxue1xyXG4gICAgd2lkdGg6IDk2cHg7XHJcbiAgICBoZWlnaHQ6IDk2cHg7XHJcbiAgICBtYXJnaW46IDAgYXV0byAxMHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbi5uZWVkLWhlbHBcclxue1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4ubmV3LWFjY291bnRcclxue1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbi5sb2dpbi1mb3Jte1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4uZXJyb3ItbWVzc2FnZXtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBtYXJnaW4tbGVmdDogNyU7XHJcbn1cclxuXHJcbi5sb2dpbi1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiA1JVxyXG59XHJcblxyXG4uaW1hZ2UtMSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IC0xMnB4O1xyXG4gICAgbGVmdDogLTIzMXB4O1xyXG4gICAgei1pbmRleDogOTk7IH1cclxuICBcclxuICAuaW1hZ2UtMiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICByaWdodDogLTE5OXB4O1xyXG4gICAgei1pbmRleDogLTI7O1xyXG59Il19 */\"","module.exports = \"<div class=\\\"container login-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6 col-md-4 col-md-offset-4 login-form\\\">\\n      <h5 class=\\\"error-message\\\">{{errorMessage}}</h5>\\n      <h4 class=\\\"text-center new-account\\\">Welcome to Student Onboarding Portal</h4>\\n      <div class=\\\"account-wall\\\">\\n        <img class=\\\"profile-img\\\"\\n          src=\\\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRfgcHFDdtVVldvF_nywPeOH3OGKPfCUcWL3QRI3cHh5KiKtbaj\\\"\\n          alt=\\\"\\\">\\n          <h3 style=\\\"text-align: center\\\">Please Sign In</h3>\\n          <!-- <img src=\\\"assets/images/image-1.png\\\" alt=\\\"\\\" class=\\\"image-1\\\"> -->\\n        <form #loginform=\\\"ngForm\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"onSubmit($event)\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"username\\\" placeholder=\\\"Username\\\" #username=\\\"ngModel\\\"\\n            [class.is-invalid]=\\\"username.invalid && username.touched\\\" [(ngModel)]=\\\"userModel.username\\\"\\n            required >\\n          <small class=\\\"text-danger\\\" [class.d-none]=\\\"username.valid || username.untouched\\\">Username is required</small>\\n          <br>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password = \\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"userModel.password\\\"  required>\\n          <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.valid || password.untouched\\\">Password is required</small>\\n          <br>\\n          <button class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"loginform.form.invalid\\\" type=\\\"submit\\\">\\n            Sign in</button>\\n        </form>\\n        <!-- <img src=\\\"assets/images/image-2.png\\\" alt=\\\"\\\" class=\\\"image-2\\\"> -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<nav class=\\\"navbar navbar-dark bg-primary mt-5 fixed-bottom\\\">\\n    <div class=\\\"navbar-expand m-auto navbar-text\\\">\\n      Made by <a href=\\\"https://github.com/ayush1035\\\">Ayush 3145844</a>&nbsp; <i class=\\\"fa fa-copyright\\\"></i>\\n    </div>\\n  </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../shared/user';\nimport {LoginService} from '../shared/login.service';\nimport {Router} from \"@angular/router\";\nimport {SharedService} from '../../core/services/shared.service'\nimport * as constants from '../shared/constants'\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userModel = new User('',''); // at first username and password will be empty.\n  errorMessage = '';\n\n  constructor(private loginService: LoginService,private router: Router,private sharedService:SharedService) { } // initializing the Login service and router\n\n  ngOnInit() {\n  }\n\n  /**\n   * \n   * @param event (event triggered on clicking the signin button)\n   */\n  onSubmit(event){\n    if(this.loginService.verifyUser(this.userModel)){\n      //if the credentials match we will route to landing page\n      this.sharedService.login();\n      this.router.navigate(['/student-onboard'])\n    }\n    else{\n      //if the credentials do not match we will dispay an error message on the screen\n      this.errorMessage =constants.ERROR_MESSAGE ;\n    }\n  }\n\n\n\n}\n","export const USERNAME = 'admin';\r\nexport const PASSWORD = 'admin';\r\nexport const ERROR_MESSAGE = 'Username or Password is Invalid!';","import { Injectable } from '@angular/core';\nimport {User} from './user';\nimport * as constants from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n\n  /**\n   * \n   * @param user User that needs to be verified\n   * function to verify if the username or password is correct\n   */\n  verifyUser (user:User):boolean {\n    if(user.username === constants.USERNAME && user.password === constants.PASSWORD) //if username and password matches\n    {\n      localStorage.setItem('username',user.username); // setting the username in the localStorage\n      return true;\n    }\n    else\n    return false; // if the username and password does not match\n  } \n}\n","export class User {\r\n    constructor(\r\n        public username: string,\r\n        public password: string,\r\n    ) {}\r\n}"],"sourceRoot":""}