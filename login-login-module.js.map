{"version":3,"sources":["webpack:///./src/app/core/guards/auth-guard-for-login.service.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login/login.component.css","webpack:///./src/app/login/login/login.component.html","webpack:///./src/app/login/login/login.component.ts","webpack:///./src/app/login/shared/constants.ts","webpack:///./src/app/login/shared/login.service.ts","webpack:///./src/app/login/shared/user.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {SharedService} from '../services/shared.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardForLoginService implements CanActivate{\n\n  constructor(private _router: Router,private sharedService:SharedService) { } // initializing the router\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.sharedService.checkLogin()) {\n      return true; // allow the access of the page\n    }\n    else\n    {\n      this._router.navigate(['/student-onboard','create']); // redirect to login page\n    }\n  }\n\n  /**\n   * to check whether a user is logged in or not\n   */\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport {AuthGuardForLoginService} from '../core/guards/auth-guard-for-login.service';\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    canActivate:[AuthGuardForLoginService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \".form-signin\\r\\n{\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.form-signin .form-signin-heading, .form-signin .checkbox\\r\\n{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.form-signin .checkbox\\r\\n{\\r\\n    font-weight: normal;\\r\\n}\\r\\n.form-signin .form-control\\r\\n{\\r\\n    position: relative;\\r\\n    font-size: 16px;\\r\\n    height: auto;\\r\\n    padding: 10px;\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n.form-signin .form-control:focus\\r\\n{\\r\\n    z-index: 2;\\r\\n}\\r\\n.form-signin input[type=\\\"text\\\"]\\r\\n{\\r\\n    margin-bottom: -1px;\\r\\n    border-bottom-left-radius: 0;\\r\\n    border-bottom-right-radius: 0;\\r\\n}\\r\\n.form-signin input[type=\\\"password\\\"]\\r\\n{\\r\\n    margin-bottom: 10px;\\r\\n    border-top-left-radius: 0;\\r\\n    border-top-right-radius: 0;\\r\\n}\\r\\n.account-wall\\r\\n{\\r\\n    margin-top: 20px;\\r\\n    padding: 40px 5px 20px 5px;\\r\\n    background-color: #f7f7f7;\\r\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n.login-title\\r\\n{\\r\\n    color: #555;\\r\\n    font-size: 18px;\\r\\n    font-weight: 400;\\r\\n    display: block;\\r\\n}\\r\\n.profile-img\\r\\n{\\r\\n    width: 96px;\\r\\n    height: 96px;\\r\\n    margin: 0 auto 10px;\\r\\n    display: block;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n.need-help\\r\\n{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.new-account\\r\\n{\\r\\n    display: block;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.login-form{\\r\\n    margin: auto;\\r\\n}\\r\\n.error-message{\\r\\n    color: red;\\r\\n    margin-left: 7%;\\r\\n}\\r\\n.login-container{\\r\\n    margin-top: 2%;\\r\\n}\\r\\n.btn{\\r\\n    margin: 3px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGNBQWM7QUFDbEI7QUFDQTs7SUFFSSxtQkFBbUI7QUFDdkI7QUFDQTs7SUFFSSxtQkFBbUI7QUFDdkI7QUFDQTs7SUFFSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLFlBQVk7SUFDWixhQUFhO0lBR2Isc0JBQXNCO0FBQzFCO0FBQ0E7O0lBRUksVUFBVTtBQUNkO0FBQ0E7O0lBRUksbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7QUFDQTs7SUFFSSxtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLDBCQUEwQjtBQUM5QjtBQUNBOztJQUVJLGdCQUFnQjtJQUNoQiwwQkFBMEI7SUFDMUIseUJBQXlCO0lBR3pCLDBDQUEwQztBQUM5QztBQUNBOztJQUVJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7QUFDQTs7SUFFSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixjQUFjO0lBR2Qsa0JBQWtCO0FBQ3RCO0FBQ0E7O0lBRUksZ0JBQWdCO0FBQ3BCO0FBQ0E7O0lBRUksY0FBYztJQUNkLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUVBO0lBQ0ksVUFBVTtJQUNWLGVBQWU7QUFDbkI7QUFFQTtJQUNJLGNBQWM7QUFDbEI7QUFFQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1zaWduaW5cclxue1xyXG4gICAgbWF4LXdpZHRoOiAzMzBweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG4uZm9ybS1zaWduaW4gLmZvcm0tc2lnbmluLWhlYWRpbmcsIC5mb3JtLXNpZ25pbiAuY2hlY2tib3hcclxue1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4uZm9ybS1zaWduaW4gLmNoZWNrYm94XHJcbntcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2xcclxue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuLmZvcm0tc2lnbmluIC5mb3JtLWNvbnRyb2w6Zm9jdXNcclxue1xyXG4gICAgei1pbmRleDogMjtcclxufVxyXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1cInRleHRcIl1cclxue1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLTFweDtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcclxufVxyXG4uZm9ybS1zaWduaW4gaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdXHJcbntcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcbn1cclxuLmFjY291bnQtd2FsbFxyXG57XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZzogNDBweCA1cHggMjBweCA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xyXG4gICAgLW1vei1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxufVxyXG4ubG9naW4tdGl0bGVcclxue1xyXG4gICAgY29sb3I6ICM1NTU7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLnByb2ZpbGUtaW1nXHJcbntcclxuICAgIHdpZHRoOiA5NnB4O1xyXG4gICAgaGVpZ2h0OiA5NnB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG8gMTBweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG4ubmVlZC1oZWxwXHJcbntcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLm5ldy1hY2NvdW50XHJcbntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4ubG9naW4tZm9ybXtcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2V7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDclO1xyXG59XHJcblxyXG4ubG9naW4tY29udGFpbmVye1xyXG4gICAgbWFyZ2luLXRvcDogMiU7XHJcbn1cclxuXHJcbi5idG57XHJcbiAgICBtYXJnaW46IDNweDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container login-container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6 col-md-4 col-md-offset-4 login-form\\\">\\n      <h5 class=\\\"error-message\\\">{{errorMessage}}</h5>\\n      <h4 class=\\\"text-center new-account\\\">Welcome to Student Onboarding Portal</h4>\\n      <div class=\\\"account-wall\\\">\\n        <img class=\\\"profile-img\\\"\\n          src=\\\"assets/images/student2.png\\\"\\n          alt=\\\"\\\">\\n          <h3 style=\\\"text-align: center\\\">Please Sign In</h3>\\n          <!-- <img src=\\\"assets/images/image-1.png\\\" alt=\\\"\\\" class=\\\"image-1\\\"> -->\\n        <form #loginform=\\\"ngForm\\\" class=\\\"form-signin\\\" (ngSubmit)=\\\"onSubmit($event)\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"username\\\" placeholder=\\\"Username\\\" #username=\\\"ngModel\\\"\\n            [class.is-invalid]=\\\"username.invalid && username.touched\\\" [(ngModel)]=\\\"userModel.username\\\"\\n            required >\\n          <small class=\\\"text-danger\\\" [class.d-none]=\\\"username.valid || username.untouched\\\">Username is required</small>\\n          <br>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password = \\\"ngModel\\\" name=\\\"password\\\" [(ngModel)]=\\\"userModel.password\\\"  required>\\n          <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.valid || password.untouched\\\">Password is required</small>\\n          <br>\\n         <div class=\\\"row\\\">\\n          <button class=\\\"btn btn-lg btn-primary  col-md-12\\\" [disabled]=\\\"loginform.form.invalid\\\" type=\\\"submit\\\">\\n            Sign in</button>\\n            <button class=\\\"btn btn-lg btn-dark  resetButton  col-md-12\\\" (click)='reset()' type=\\\"button\\\">\\n              Reset</button> \\n         </div> \\n        </form>\\n        <!-- <img src=\\\"assets/images/image-2.png\\\" alt=\\\"\\\" class=\\\"image-2\\\"> -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<nav class=\\\"navbar navbar-dark bg-primary mt-5 fixed-bottom\\\">\\n    <div class=\\\"navbar-expand m-auto navbar-text\\\">\\n      Made by <a href=\\\"https://github.com/ayush1035\\\">Ayush 3145844</a>&nbsp; <i class=\\\"fa fa-copyright\\\"></i>\\n    </div>\\n  </nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../shared/user';\nimport {LoginService} from '../shared/login.service';\nimport {Router} from \"@angular/router\";\nimport {SharedService} from '../../core/services/shared.service'\nimport * as constants from '../shared/constants'\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userModel = new User('',''); // at first username and password will be empty.\n  errorMessage = '';\n\n  constructor(private loginService: LoginService,private router: Router,private sharedService:SharedService) { } // initializing the Login service and router\n\n  ngOnInit() {\n  }\n\n  /**\n   * \n   * @param event (event triggered on clicking the signin button)\n   */\n  onSubmit(event){\n    if(this.loginService.verifyUser(this.userModel)){\n      //if the credentials match we will route to landing page\n      this.sharedService.login();\n      this.router.navigate(['/student-onboard','create'])\n    }\n    else{\n      //if the credentials do not match we will dispay an error message on the screen\n      this.errorMessage =constants.ERROR_MESSAGE ;\n    }\n  }\n\n  reset(){\n    if(this.userModel.username!=='')\n    {\n      this.userModel.username = ''\n    }\n    if(this.userModel.password!=='')\n    {\n      this.userModel.password = ''\n    }\n\n  }\n\n\n\n}\n","\r\nexport const ERROR_MESSAGE = 'Username or Password is Invalid!';","import { Injectable } from '@angular/core';\nimport {User} from './user';\nimport * as constants from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n\n  /**\n   * \n   * @param user User that needs to be verified\n   * function to verify if the username or password is correct\n   */\n  verifyUser (user:User):boolean {\n    if(user.username  && user.password ) //if username and password matches\n    {\n      localStorage.setItem('username',user.username); // setting the username in the localStorage\n      return true;\n    }\n    else\n    return false; // if the username and password does not match\n  } \n}\n","export class User {\r\n    constructor(\r\n        public username: string,\r\n        public password: string,\r\n    ) {}\r\n}"],"sourceRoot":""}